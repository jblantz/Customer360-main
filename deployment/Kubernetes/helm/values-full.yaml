# helm upgrade --install {{release-name}} -f ./values.yaml

# Default values for Customer360.
global:
  # PingOne Service Details
  pingOne:
    # Set to `true` if you are supplying your PingOne details 
    usePingOneServices: true
    # This configures the proper endpoints for My Ping and PingOne Service IKs
    # PingOne Regions - "NA" | "EU" | "AP"
    envRegion: "NA"
    # If using My Ping - enter the details for the Admin SSO Connection here
    # https://github.com/cprice-ping/Customer360/blob/main/docs/sso-myping.md
    adminConsole:
      # Set to `true` to enable My Ping - if `false`, Admin consoles will use LDAP (PF \ PD) or Native (PC \ PA)
      useMyPing: false
      envId: "YourAdminAuthNEnvId"
      adminAppId: "YourAdminAuthNApp"
      adminAppSecret: "YourAdminAuthNSecret"
    # This section if for the PingOne Service(s) details
    environment:
      # PingOne EnvID that PF will be connected to
      envId: "YourP1EnvID"
      # PF Worker App (Configured in Connections --> Ping Platform)
      pfWorkerId: "YourPFWorkerAppID"
      pfWorkerSecret: "YourPFWorkerAppSecret"
      # Native App used by the PingOne MFA IK to do User MFA flows
      mfaAppId: "YourMfaAppID"
      mfaAppSecret: "YourMfaAppSecret"
      mfaPopId: "YourMfaUserPopulationID"

  # Your specific environment variables - values are injected into Server Profiles
  envs:
    # Ping Global Values
    # Default Administrative Password - also passed to APIs as {{globalPwd}}
    PING_IDENTITY_PASSWORD: "2FederateM0re"

    # PD Variables
    ## BaseDN of the datastore
    USER_BASE_DN: "dc=customer360.com"

  # Client Connection settings - by default, Ingress, DNS, Certificates are handled by k8s
  # PingAccess can be used instead by setting `useCases.paAsProxy: true` below
  clientConnection:
    externalDNS: 
      # Set to `true` if you want a Vanity DNS domain - otherwise it will be set to `{{release-name}}.ping-devops.com`
      enabled: false
      # Change `externalHostame` if above set to `true`
      externalHostname: "your.externalHostname.com"
      # If you want a self-signed certificate for your `externalHostname` 
      # ping-devops generate tls-secret {{externalHostname}} | kubectl apply -f -
      certificate:
        tlsSecretName: tls-secret

  # Enable these to include with the base Customer360 configuration
  useCases:
    # Add PingAccess proxy deployment for all Client traffic, instead of Ingress 
    paAsProxy:
      # If enabled, create your `externalHostname` DNS record as a CNAME to `pa.ping-demos.com`
      # This will send traffic through the `nginx-public-passthrough` Ingress IP
      enabled: false
      ## Set TRUSTED_CERT to `true` if you want a Let's Encrypt Cert
      ## (Leave to `false` while testing - so you don't trip LE rate limits)
      ## Configure `externalDNS` above if you want a Vanity domain with ACME managed cert
      useTrustedCert: false
    # Add PingAccess deployment for protected WAM Client traffic
    # Configures PF as the Token Provider
    paAsWAM:
      enabled: false
    # Configure PD Consent API and prep PF \ PA for Privacy Dashboard
    consentManagement: 
      enabled: false
    # Configure PD for DelAdmin (Config and Users) and install Delegator
    # Server Profile: https://github.com/cprice-ping/Profile-DelAdmin
    delegatedAdministration: 
      enabled: false
 
  api:
    # Set to "DEBUG" if you want to see the output of the API calls being made by pingconfig
    # kubectl logs -f job/{{release name}}-pingconfig
    logLevel: "INFO"

## Product Specific values
# DevOps Keys and \ or License files can be applied to the container
# License files should be injected into your kubernetes namespace as secrets:
  # (Eval)   ping-devops generate license {product} | kubectl apply -f -
  # (Real)   ping-devops generate license-secret {license file} | kubectl apply -f -
pingfederate:
  pingdevops:
    license:
      # If set to false, licenses must be mounted as secrets
      useDevOpsKey: false
      ## Accept the Ping EULA -- "YES" | (default) "NO" (Note: this will not allow Products to launch)
      acceptEULA: "NO"

pingdirectory:
  pingdevops:
  # Variables used to determine licensing for the stack
    license:
      # If set to false, licenses must be mounted as secrets
      useDevOpsKey: false
      ## Accept the Ping EULA -- "YES" | (default) "NO" (Note: this will not allow Products to launch)
      acceptEULA: "NO"

pingdatasync:
  pingdevops:
    # Variables used to determine licensing for the stack
    license:
      # If set to false, licenses must be mounted as secrets
      useDevOpsKey: false
      ## Accept the Ping EULA -- "YES" | (default) "NO" (Note: this will not allow Products to launch)
      acceptEULA: "NO"

pingcentral:
  pingdevops:
    # Variables used to determine licensing for the stack
    license:
      # If set to false, licenses must be mounted as secrets
      useDevOpsKey: false
      ## Accept the Ping EULA -- "YES" | (default) "NO" (Note: this will not allow Products to launch)
      acceptEULA: "NO"